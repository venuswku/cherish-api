const router = require("express").Router();
let User = require("../models/user.model");

// Route: /users/add
// Creates a new user.
router.route("/add").post((req, res) => {
  // Only add user to database if it doesn't exist yet.
  User.findOne({ email: req.body.email })
    .then(existingUser => res.json(`User with the email ${existingUser.email} has already been added to our database.`))
    .catch(err => {
      const userData = { email: req.body.email };
      if (req.body.hasOwnProperty("name")) {
        userData["name"] = req.body.name;
      }
      const newUser = new User(userData);
      
      newUser.save()
        .then(() => res.status(201).json("You are saved to our database!"))
        .catch(err => res.status(400).json("Error saving you to our database: " + err));
    });
});

// Route: /users/
// Reads and returns all users from the MongoDB Atlas database.
// If query parameter values with the key "id" or "email" are provided, reads and returns user(s) with the specified object id (automatically generated by MongoDB) or email, both of which should be unique to a single user.
router.route("/").get((req, res) => {
  const idFilter = req.query.id;
  const emailFilter = req.query.email;
  if (idFilter || emailFilter) {
    User.find({ $or: [{_id: idFilter}, {email: emailFilter}] })
      .then(user => res.json(user))
      .catch(err => res.status(400).json("No user with the specified id or email was found: " + err));
  } else {
    User.find()
      .then(users => res.json(users))
      .catch(err => res.status(400).json("Error getting all users from database: " + err));
  }
});

module.exports = router;